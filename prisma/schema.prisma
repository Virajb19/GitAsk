generator client {
    provider = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    extensions = [vector]
}


enum OauthProvider {
  GOOGLE
  GITHUB
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String? 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lastLogin DateTime @default(now())
  ProfilePicture String? @default("")

  OauthProvider OauthProvider?
  OauthId String?

  credits Int @default(100)

  projects Project[]
  questionsAsked Question[]
}

model Project {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String 
  repoURL String 
  githubToken String?

  deletedAt DateTime? 
   
  userId Int
  user User @relation(fields: [userId], references: [id])

  commits Commit[]
  embeddings SourceCodeEmbedding[]
  questions Question[]

  @@unique([userId,repoURL])
}

model Commit {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  message String
  hash String
  authorName String
  authorAvatar String
  date DateTime

  summary String

  projectId String
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model SourceCodeEmbedding {
   id String @id @default(cuid())

   summaryEmbedding Unsupported("vector(768)")?
   sourceCode String
   filename String
   summary String

   projectId String
   project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Question {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  question String
  answer String

  filesReferences Json?

  projectId String
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  userId Int
  user User @relation(fields: [userId], references: [id])

  @@unique([answer,projectId])
}
